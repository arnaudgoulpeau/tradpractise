{% extends 'layout.html.twig' %}

{% block javascripts %}
{{ parent() }}
<script>
    var $collectionHolder;

    // setup an "add a tag" link
    var $addTagLink = $('<a href="#" class="add_tuneFile_link">Add a tag</a>');
    var $newLinkLi = $('<li></li>').append($addTagLink);

    jQuery(document).ready(function() {
        // Get the ul that holds the collection of tags
        $collectionHolder = $('ul.tuneFiles');

        // add a delete link to all of the existing tag form li elements
        $collectionHolder.find('li').each(function() {
            addTagFormDeleteLink($(this));
        });

        // add the "add a tag" anchor and li to the tags ul
        $collectionHolder.append($newLinkLi);

        // count the current form inputs we have (e.g. 2), use that as the new
        // index when inserting a new item (e.g. 2)
        $collectionHolder.data('index', $collectionHolder.find(':input').length);

        $addTagLink.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // add a new tag form (see next code block)
            addTuneFileForm($collectionHolder, $newLinkLi);
        });
    });

    /**
     *
     * @param {type} $collectionHolder
     * @param {type} $newLinkLi
     * @returns {addTagForm}
     */
    function addTuneFileForm($collectionHolder, $newLinkLi) {
        // Get the data-prototype explained earlier
        var prototype = $collectionHolder.data('prototype');

        // get the new index
        var index = $collectionHolder.data('index');

        var newForm = prototype;
        // You need this only if you didn't set 'label' => false in your tags field in TaskType
        // Replace '__name__label__' in the prototype's HTML to
        // instead be a number based on how many items we have
        // newForm = newForm.replace(/__name__label__/g, index);

        // Replace '__name__' in the prototype's HTML to
        // instead be a number based on how many items we have
        newForm = newForm.replace(/__name__/g, index);

        // increase the index with one for the next item
        $collectionHolder.data('index', index + 1);

        // Display the form in the page in an li, before the "Add a tag" link li
        var $newFormLi = $('<li></li>').append(newForm);
        $newLinkLi.before($newFormLi);

        // add a delete link to the new form
        addTagFormDeleteLink($newFormLi);
    }

    function addTagFormDeleteLink($tagFormLi) {
        var $removeFormA = $('<a href="#">delete</a>');
        $tagFormLi.append($removeFormA);

        $removeFormA.on('click', function(e) {
            // prevent the link from creating a "#" on the URL
            e.preventDefault();

            // remove the li for the tag form
            $tagFormLi.remove();
        });
    }
</script>
{% endblock %}

{% block content %}
{{ form_start(form) }}
    {# render the task's only field: description #}
    {{ form_row(form.name) }}
    {{ form_row(form.tuneType) }}
    {{ form_row(form.linkTheSession) }}
    {{ form_row(form.isStared) }}
    {{ form_row(form.tags) }}

    <h3>Files</h3>
    <ul class="tuneFiles" data-prototype="{{ form_widget(form.tuneFiles.vars.prototype)|e('html_attr') }}">
        {# iterate over each existing tag and render its only field: name #}
        {% for tuneFile in form.tuneFiles %}
            <li>{{ form_row(tuneFile.name) }}</li>
            <li>{{ form_row(tuneFile.file) }}</li>
            <li>{{ form_row(tuneFile.tuneFileType) }}</li>
        {% endfor %}
    </ul>
{{ form_end(form) }}
{% endblock content %}